% Verifies if a collection of points generated by our algorithm is indeed a (lambda,epsilon)-quasi-geodesic

% constants for quasi-geodesic
% target length varies
DELTA = log(1 + sqrt(2));
eps = 5;
lambda = 10;
target_length = 10;
step_size = 0.1;
min_segment_splits = 1;
pruning_sample_ratio = 100; % 1/N of the segments will be sampled for pruning
subdivisions = 10;


tic
[start_points, end_points] = random_walk_hyperbolic(lambda, eps, step_size, target_length, min_segment_splits,0);
toc

disp("Length of geodesic = "+target_length);
disp("Number of steps taken = "+num_points);
disp("R bound = "+verification(1)+"; Hausdorff Distance = "+verification(2));
disp(verify_quasigeodesic(start_points, end_points,lambda, eps, step_size, subdivisions));
disp("--------------------------");
disp(' ');
disp(' ');



